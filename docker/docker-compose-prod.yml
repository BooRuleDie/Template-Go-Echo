services:
    # PostgreSQL database
    postgres:
        image: postgres:17.4
        restart: always
        container_name: postgres-prod
        env_file: .env.prod
        volumes:
            - echo_template_db_prod:/var/lib/postgresql/data
        ports:
            - "0.0.0.0:6543:5432"
        healthcheck:
            test:
                ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
            interval: 5s
            timeout: 5s
            retries: 10

    # Redis cache
    redis:
        image: redis:7-alpine
        restart: always
        container_name: redis-prod
        env_file: .env.prod
        command: sh -c 'redis-server --requirepass "$$REDIS_PASSWORD"'
        ports:
            - "0.0.0.0:6380:6379"
        volumes:
            - echo_template_redis_prod:/data

    # Database migration service
    migration:
        build:
            context: ..
            dockerfile: ./docker/Dockerfile.migration
        container_name: migration-prod
        volumes:
            - ../migration:/app/migration
        env_file: .env.prod
        restart: "no"
        depends_on:
            postgres:
                condition: service_healthy

    app:
        image: echo_template:prod
        container_name: app-prod
        volumes:
            - ..:/app
        ports:
            - "0.0.0.0:9090:8080"
        env_file: .env.prod
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_started
            migration:
                condition: service_completed_successfully
volumes:
    migration:
    echo_template_db_prod:
    echo_template_redis_prod:
