services:
    # PostgreSQL database
    postgres:
        image: postgres:17.4
        restart: always
        container_name: postgres-dev
        env_file: .env.dev
        volumes:
            - echo_template_db_dev:/var/lib/postgresql/data
        ports:
            - "0.0.0.0:5432:5432"
        healthcheck:
            test:
                ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
            interval: 5s
            timeout: 5s
            retries: 10

    # Redis cache
    redis:
        image: redis:7-alpine
        restart: always
        container_name: redis-dev
        env_file: .env.dev
        command: sh -c 'redis-server --requirepass "$$REDIS_PASSWORD"'
        ports:
            - "0.0.0.0:6379:6379"
        volumes:
            - echo_template_redis_dev:/data

    # Database migration service
    migration:
        build:
            context: ..
            dockerfile: ./docker/Dockerfile.migration
        container_name: migration-dev
        volumes:
            - ../migration:/app/migration
        env_file: .env.dev
        restart: "no"
        depends_on:
            postgres:
                condition: service_healthy
                
    app:
        image: echo_template:dev
        container_name: app-dev
        volumes:
            - ..:/app
        ports:
            - "0.0.0.0:8080:8080"
        env_file: .env.dev
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_started
            migration:
                condition: service_completed_successfully
volumes:
    migration:
    echo_template_db_dev:
    echo_template_redis_dev:

